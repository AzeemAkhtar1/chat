{"version":3,"file":"js/72.51817b14.js","mappings":"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","sources":["webpack://client/./src/views/Chat.vue","webpack://client/./src/components/chat/UserList.vue","webpack://client/./src/components/chat/UserList.vue?989a","webpack://client/./src/components/chat/ChatWindow.vue","webpack://client/./src/components/chat/ChatWindow.vue?7a50","webpack://client/./src/components/chat/MessageInput.vue","webpack://client/./src/components/chat/MessageInput.vue?09bc","webpack://client/./node_modules/engine.io-parser/build/esm/commons.js","webpack://client/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://client/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://client/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://client/./node_modules/engine.io-parser/build/esm/index.js","webpack://client/./node_modules/@socket.io/component-emitter/lib/esm/index.js","webpack://client/./node_modules/engine.io-client/build/esm/globals.js","webpack://client/./node_modules/engine.io-client/build/esm/util.js","webpack://client/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://client/./node_modules/engine.io-client/build/esm/transport.js","webpack://client/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://client/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://client/./node_modules/engine.io-client/build/esm/transports/polling-xhr.js","webpack://client/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://client/./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack://client/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://client/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://client/./node_modules/engine.io-client/build/esm/socket.js","webpack://client/./node_modules/engine.io-client/build/esm/index.js","webpack://client/./node_modules/socket.io-client/build/esm/url.js","webpack://client/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://client/./node_modules/socket.io-parser/build/esm/binary.js","webpack://client/./node_modules/socket.io-parser/build/esm/index.js","webpack://client/./node_modules/socket.io-client/build/esm/on.js","webpack://client/./node_modules/socket.io-client/build/esm/socket.js","webpack://client/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://client/./node_modules/socket.io-client/build/esm/manager.js","webpack://client/./node_modules/socket.io-client/build/esm/index.js","webpack://client/./src/services/socket.js","webpack://client/./src/views/Chat.vue?65ee"],"sourcesContent":["<template>\r\n    <div class=\"container-fluid mt-4\">\r\n      <div class=\"row\">\r\n        <!-- Users List Sidebar -->\r\n        <div class=\"col-md-3\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h5 class=\"mb-0\">Online Users</h5>\r\n            </div>\r\n            <div class=\"card-body p-0\">\r\n              <user-list \r\n                :users=\"onlineUsers\"\r\n                :selectedUser=\"selectedUser\"\r\n                @select-user=\"selectUser\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- Chat Window -->\r\n        <div class=\"col-md-9\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h5 class=\"mb-0\">\r\n                {{ selectedUser ? `Chat with ${selectedUser.username}` : 'Select a user to start chatting' }}\r\n              </h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <chat-window \r\n                v-if=\"selectedUser\"\r\n                :messages=\"messages\"\r\n                :currentUser=\"currentUser\"\r\n                :selectedUser=\"selectedUser\"\r\n              />\r\n              <message-input \r\n                v-if=\"selectedUser\"\r\n                @send-message=\"sendMessage\"\r\n                :isTyping=\"isTyping\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, onMounted, computed } from 'vue'\r\n  import { useStore } from 'vuex'\r\n  import UserList from '../components/chat/UserList.vue'\r\n  import ChatWindow from '../components/chat/ChatWindow.vue'\r\n  import MessageInput from '../components/chat/MessageInput.vue'\r\n  import { initializeSocket } from '../services/socket'\r\n  \r\n  export default {\r\n    name: 'ChatView',\r\n    components: {\r\n      UserList,\r\n      ChatWindow,\r\n      MessageInput\r\n    },\r\n    setup() {\r\n      const store = useStore()\r\n      const socket = ref(null)\r\n      const onlineUsers = ref([])\r\n      const selectedUser = ref(null)\r\n      const messages = ref([])\r\n      const isTyping = ref(false)\r\n      \r\n      const currentUser = computed(() => store.getters['auth/currentUser'])\r\n  \r\n      onMounted(async () => {\r\n        socket.value = await initializeSocket(currentUser.value.token)\r\n        \r\n        socket.value.on('users', (users) => {\r\n          onlineUsers.value = users.filter(user => user._id !== currentUser.value._id)\r\n        })\r\n  \r\n        socket.value.on('message', (message) => {\r\n          messages.value.push(message)\r\n        })\r\n  \r\n        socket.value.on('message-history', (history) => {\r\n          messages.value = history\r\n        })\r\n  \r\n        socket.value.on('typing', (user) => {\r\n          if (selectedUser.value && user._id === selectedUser.value._id) {\r\n            isTyping.value = true\r\n            setTimeout(() => { isTyping.value = false }, 3000)\r\n          }\r\n        })\r\n      })\r\n  \r\n      const selectUser = (user) => {\r\n        selectedUser.value = user\r\n        messages.value = []\r\n        socket.value.emit('get-messages', {\r\n          from: currentUser.value._id,\r\n          to: user._id\r\n        })\r\n      }\r\n  \r\n      const sendMessage = (content) => {\r\n        if (!selectedUser.value) return\r\n  \r\n        const message = {\r\n          from: currentUser.value._id,\r\n          to: selectedUser.value._id,\r\n          content,\r\n          timestamp: new Date()\r\n        }\r\n  \r\n        socket.value.emit('send-message', message)\r\n        messages.value.push(message)\r\n      }\r\n  \r\n      return {\r\n        onlineUsers,\r\n        selectedUser,\r\n        messages,\r\n        currentUser,\r\n        isTyping,\r\n        selectUser,\r\n        sendMessage\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .chat-body {\r\n    padding: 0;\r\n    height: calc(100vh - 200px);\r\n    overflow: hidden;\r\n  }\r\n  </style>","<template>\r\n  <div class=\"list-group list-group-flush\">\r\n    <a \r\n      v-for=\"user in users\" \r\n      :key=\"user._id\"\r\n      href=\"#\"\r\n      class=\"list-group-item list-group-item-action\"\r\n      :class=\"{ active: selectedUser && selectedUser._id === user._id }\"\r\n      @click.prevent=\"$emit('select-user', user)\"\r\n    >\r\n      <div class=\"d-flex align-items-center\">\r\n        <div class=\"user-status\" :class=\"{ online: user.isOnline }\"></div>\r\n        <div class=\"ms-3\">\r\n          <div class=\"fw-bold\">{{ user.username }}</div>\r\n          <small>{{ user.isOnline ? 'Online' : 'Offline' }}</small>\r\n        </div>\r\n      </div>\r\n    </a>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'UserList',\r\n  props: {\r\n    users: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    selectedUser: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user-status {\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  background-color: #ccc;\r\n}\r\n\r\n.user-status.online {\r\n  background-color: #28a745;\r\n}\r\n\r\n.list-group-item {\r\n  border-left: none;\r\n  border-right: none;\r\n}\r\n\r\n.list-group-item:first-child {\r\n  border-top: none;\r\n}\r\n\r\n.list-group-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.list-group-item.active {\r\n  background-color: #f8f9fa;\r\n  border-color: #dee2e6;\r\n  color: #212529;\r\n}\r\n</style>\r\n","import { render } from \"./UserList.vue?vue&type=template&id=17c0570a&scoped=true\"\nimport script from \"./UserList.vue?vue&type=script&lang=js\"\nexport * from \"./UserList.vue?vue&type=script&lang=js\"\n\nimport \"./UserList.vue?vue&type=style&index=0&id=17c0570a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-17c0570a\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"chat-messages\" ref=\"messagesContainer\">\r\n    <div v-if=\"messages.length === 0\" class=\"text-center text-muted my-4\">\r\n      No messages yet. Start the conversation!\r\n    </div>\r\n    <div \r\n      v-for=\"(message, index) in messages\" \r\n      :key=\"index\"\r\n      class=\"message\"\r\n      :class=\"{ 'message-sent': isSentMessage(message), 'message-received': !isSentMessage(message) }\"\r\n    >\r\n      <div class=\"message-content\">\r\n        {{ message.content }}\r\n        <small class=\"message-time\">{{ formatTime(message.timestamp || message.createdAt) }}</small>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { onMounted, onUpdated, ref } from 'vue'\r\n\r\nexport default {\r\n  name: 'ChatWindow',\r\n  props: {\r\n    messages: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    currentUser: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    selectedUser: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  setup(props) {\r\n    const messagesContainer = ref(null)\r\n\r\n    const scrollToBottom = () => {\r\n      if (messagesContainer.value) {\r\n        messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      scrollToBottom()\r\n    })\r\n\r\n    onUpdated(() => {\r\n      scrollToBottom()\r\n    })\r\n\r\n    const isSentMessage = (message) => {\r\n      return message.from === props.currentUser._id\r\n    }\r\n\r\n    const formatTime = (timestamp) => {\r\n      return new Date(timestamp).toLocaleTimeString([], { \r\n        hour: '2-digit', \r\n        minute: '2-digit' \r\n      })\r\n    }\r\n\r\n    return {\r\n      messagesContainer,\r\n      isSentMessage,\r\n      formatTime\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chat-messages {\r\n  height: 400px;\r\n  overflow-y: auto;\r\n  padding: 1rem;\r\n}\r\n\r\n.message {\r\n  margin-bottom: 1rem;\r\n  max-width: 70%;\r\n}\r\n\r\n.message-sent {\r\n  margin-left: auto;\r\n}\r\n\r\n.message-received {\r\n  margin-right: auto;\r\n}\r\n\r\n.message-content {\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 1rem;\r\n  position: relative;\r\n}\r\n\r\n.message-sent .message-content {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.message-received .message-content {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n.message-time {\r\n  display: block;\r\n  font-size: 0.75rem;\r\n  margin-top: 0.25rem;\r\n  opacity: 0.7;\r\n}\r\n</style>","import { render } from \"./ChatWindow.vue?vue&type=template&id=00bea541&scoped=true\"\nimport script from \"./ChatWindow.vue?vue&type=script&lang=js\"\nexport * from \"./ChatWindow.vue?vue&type=script&lang=js\"\n\nimport \"./ChatWindow.vue?vue&type=style&index=0&id=00bea541&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-00bea541\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"message-input mt-3\">\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div class=\"input-group\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          v-model=\"message\"\r\n          placeholder=\"Type your message...\"\r\n          @input=\"handleTyping\"\r\n        >\r\n        <button \r\n          class=\"btn btn-primary\"\r\n          type=\"submit\"\r\n          :disabled=\"!message.trim()\"\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </form>\r\n    <small v-if=\"isTyping\" class=\"text-muted\">\r\n      User is typing...\r\n    </small>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\n\r\nexport default {\r\n  name: 'MessageInput',\r\n  props: {\r\n    isTyping: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  setup(props, { emit }) {\r\n    const message = ref('')\r\n    let typingTimeout = null\r\n\r\n    const handleSubmit = () => {\r\n      if (message.value.trim()) {\r\n        emit('send-message', message.value)\r\n        message.value = ''\r\n      }\r\n    }\r\n\r\n    const handleTyping = () => {\r\n      emit('typing')\r\n      \r\n      if (typingTimeout) {\r\n        clearTimeout(typingTimeout)\r\n      }\r\n      \r\n      typingTimeout = setTimeout(() => {\r\n        emit('stop-typing')\r\n      }, 3000)\r\n    }\r\n\r\n    return {\r\n      message,\r\n      handleSubmit,\r\n      handleTyping\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.message-input {\r\n  padding: 1rem;\r\n  border-top: 1px solid #dee2e6;\r\n}\r\n</style>\r\n","import { render } from \"./MessageInput.vue?vue&type=template&id=61ac968a&scoped=true\"\nimport script from \"./MessageInput.vue?vue&type=script&lang=js\"\nexport * from \"./MessageInput.vue?vue&type=script&lang=js\"\n\nimport \"./MessageInput.vue?vue&type=style&index=0&id=61ac968a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-61ac968a\"]])\n\nexport default __exports__","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport { SocketWithoutUpgrade, SocketWithUpgrade, } from \"./socket.js\";\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./globals.node.js\";\nexport { Fetch } from \"./transports/polling-fetch.js\";\nexport { XHR as NodeXHR } from \"./transports/polling-xhr.node.js\";\nexport { XHR } from \"./transports/polling-xhr.js\";\nexport { WS as NodeWebSocket } from \"./transports/websocket.node.js\";\nexport { WS as WebSocket } from \"./transports/websocket.js\";\nexport { WT as WebTransport } from \"./transports/webtransport.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { io } from 'socket.io-client'\r\n\r\nconst SOCKET_URL = process.env.VUE_APP_API_URL || 'http://localhost:3000'\r\n\r\nexport const initializeSocket = (token) => {\r\n  return new Promise((resolve) => {\r\n    const socket = io(SOCKET_URL, {\r\n      auth: {\r\n        token\r\n      }\r\n    })\r\n\r\n    socket.on('connect', () => {\r\n      console.log('Connected to socket server')\r\n      resolve(socket)\r\n    })\r\n\r\n    socket.on('connect_error', (error) => {\r\n      console.error('Socket connection error:', error)\r\n    })\r\n  })\r\n}\r\n","import { render } from \"./Chat.vue?vue&type=template&id=38e7edc5&scoped=true\"\nimport script from \"./Chat.vue?vue&type=script&lang=js\"\nexport * from \"./Chat.vue?vue&type=script&lang=js\"\n\nimport \"./Chat.vue?vue&type=style&index=0&id=38e7edc5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-38e7edc5\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_user_list","users","$setup","onlineUsers","selectedUser","onSelectUser","selectUser","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_toDisplayString","username","_hoisted_10","_createBlock","_component_chat_window","key","messages","currentUser","_createCommentVNode","_component_message_input","onSendMessage","sendMessage","isTyping","_Fragment","_renderList","$props","user","_id","href","_normalizeClass","active","onClick","_withModifiers","$event","_ctx","$emit","online","isOnline","name","props","type","Array","required","Object","default","__exports__","ref","length","message","index","isSentMessage","_createTextVNode","content","formatTime","timestamp","createdAt","setup","messagesContainer","scrollToBottom","value","scrollTop","scrollHeight","onMounted","onUpdated","from","Date","toLocaleTimeString","hour","minute","onSubmit","_cache","args","handleSubmit","placeholder","onInput","handleTyping","disabled","trim","Boolean","emit","typingTimeout","clearTimeout","setTimeout","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","encodePacketToBinary","packet","arrayBuffer","then","encoded","TextEncoder","encode","chars","lookup","i","charCodeAt","decode","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","count","join","decodePayload","encodedPayload","decodedPacket","push","createPacketEncoderStream","TransformStream","transform","controller","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","createPacketDecoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","Math","pow","protocol","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emitReserved","listeners","hasListeners","nextTick","isPromiseAvailable","Promise","resolve","setTimeoutFn","globalThisShim","self","window","Function","defaultBinaryType","createCookieJar","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","BASE64_OVERHEAD","utf8Length","ceil","str","c","l","randomString","now","random","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","forceBase64","onError","open","readyState","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","Polling","_polling","_poll","total","doPoll","doWrite","uri","timestampRequests","timestampParam","sid","b64","XMLHttpRequest","err","hasCORS","empty","BaseXHR","location","isSSL","xd","req","request","method","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","undefined","_create","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","hasXHR2","newRequest","responseType","XHR","assign","concat","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","WS","_packet","WT","_transport","WebTransport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","transports","websocket","webtransport","polling","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","_open","createTransport","EIO","id","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","shouldCheckPayloadSize","payloadSize","_hasPingExpired","hasExpired","msg","options","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","Socket","o","map","DEFAULT_TRANSPORTS","filter","url","loc","test","ipv6","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","_placeholder","num","newData","reconstructPacket","_reconstructPacket","isIndexValid","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","_readyState","_b","_c","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","discardPacket","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","hasError","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","isBuffered","some","sameNamespace","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","deviation","floor","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex","SOCKET_URL","process","initializeSocket","token","console","log","components","UserList","ChatWindow","MessageInput","store","useStore","computed","getters","async","history","render"],"sourceRoot":""}