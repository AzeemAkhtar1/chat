{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'RegisterView',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const username = ref('');\n    const email = ref('');\n    const password = ref('');\n    const loading = ref(false);\n    const error = ref('');\n    const handleSubmit = async () => {\n      try {\n        loading.value = true;\n        error.value = '';\n        await store.dispatch('auth/register', {\n          username: username.value,\n          email: email.value,\n          password: password.value\n        });\n        router.push('/chat');\n      } catch (err) {\n        error.value = err.response?.data?.message || 'Registration failed';\n      } finally {\n        loading.value = false;\n      }\n    };\n    return {\n      username,\n      email,\n      password,\n      loading,\n      error,\n      handleSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","useStore","useRouter","name","setup","store","router","username","email","password","loading","error","handleSubmit","value","dispatch","push","err","response","data","message"],"sources":["E:\\cursor\\client\\src\\components\\auth\\Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h3 class=\"text-center\">Register</h3>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div v-if=\"error\" class=\"alert alert-danger\">{{ error }}</div>\r\n            <form @submit.prevent=\"handleSubmit\">\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  v-model=\"username\"\r\n                  required\r\n                >\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  class=\"form-control\"\r\n                  v-model=\"email\"\r\n                  required\r\n                >\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  v-model=\"password\"\r\n                  required\r\n                >\r\n              </div>\r\n              <div class=\"d-grid\">\r\n                <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading\">\r\n                  {{ loading ? 'Loading...' : 'Register' }}\r\n                </button>\r\n              </div>\r\n            </form>\r\n            <div class=\"text-center mt-3\">\r\n              <router-link to=\"/login\">Already have an account? Login</router-link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  name: 'RegisterView',\r\n  setup() {\r\n    const store = useStore();\r\n    const router = useRouter();\r\n    \r\n    const username = ref('');\r\n    const email = ref('');\r\n    const password = ref('');\r\n    const loading = ref(false);\r\n    const error = ref('');\r\n\r\n    const handleSubmit = async () => {\r\n      try {\r\n        loading.value = true;\r\n        error.value = '';\r\n        \r\n        await store.dispatch('auth/register', {\r\n          username: username.value,\r\n          email: email.value,\r\n          password: password.value\r\n        });\r\n        \r\n        router.push('/chat');\r\n      } catch (err) {\r\n        error.value = err.response?.data?.message || 'Registration failed';\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    return {\r\n      username,\r\n      email,\r\n      password,\r\n      loading,\r\n      error,\r\n      handleSubmit\r\n    };\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";AAuDA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC,CAAC;IACxB,MAAMK,MAAK,GAAIJ,SAAS,CAAC,CAAC;IAE1B,MAAMK,QAAO,GAAIP,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMQ,KAAI,GAAIR,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMS,QAAO,GAAIT,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMU,OAAM,GAAIV,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMW,KAAI,GAAIX,GAAG,CAAC,EAAE,CAAC;IAErB,MAAMY,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACFF,OAAO,CAACG,KAAI,GAAI,IAAI;QACpBF,KAAK,CAACE,KAAI,GAAI,EAAE;QAEhB,MAAMR,KAAK,CAACS,QAAQ,CAAC,eAAe,EAAE;UACpCP,QAAQ,EAAEA,QAAQ,CAACM,KAAK;UACxBL,KAAK,EAAEA,KAAK,CAACK,KAAK;UAClBJ,QAAQ,EAAEA,QAAQ,CAACI;QACrB,CAAC,CAAC;QAEFP,MAAM,CAACS,IAAI,CAAC,OAAO,CAAC;MACtB,EAAE,OAAOC,GAAG,EAAE;QACZL,KAAK,CAACE,KAAI,GAAIG,GAAG,CAACC,QAAQ,EAAEC,IAAI,EAAEC,OAAM,IAAK,qBAAqB;MACpE,UAAU;QACRT,OAAO,CAACG,KAAI,GAAI,KAAK;MACvB;IACF,CAAC;IAED,OAAO;MACLN,QAAQ;MACRC,KAAK;MACLC,QAAQ;MACRC,OAAO;MACPC,KAAK;MACLC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}