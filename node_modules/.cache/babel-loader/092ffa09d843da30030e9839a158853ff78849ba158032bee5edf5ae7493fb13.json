{"ast":null,"code":"import { authService } from '../services/auth';\nexport default {\n  namespaced: true,\n  state: {\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    error: null\n  },\n  mutations: {\n    SET_USER(state, user) {\n      state.user = user;\n    },\n    SET_ERROR(state, error) {\n      state.error = error;\n    }\n  },\n  actions: {\n    async register({\n      commit\n    }, userData) {\n      try {\n        const user = await authService.register(userData);\n        commit('SET_USER', user);\n        return user;\n      } catch (error) {\n        commit('SET_ERROR', error.response?.data?.message || 'Registration failed');\n        throw error;\n      }\n    },\n    async login({\n      commit\n    }, credentials) {\n      try {\n        const user = await authService.login(credentials);\n        commit('SET_USER', user);\n        return user;\n      } catch (error) {\n        commit('SET_ERROR', error.response?.data?.message || 'Login failed');\n        throw error;\n      }\n    },\n    async logout({\n      commit\n    }) {\n      try {\n        await authService.logout();\n        commit('SET_USER', null);\n      } catch (error) {\n        console.error('Logout error:', error);\n      }\n    }\n  },\n  getters: {\n    isAuthenticated: state => !!state.user,\n    currentUser: state => state.user,\n    authError: state => state.error\n  }\n};","map":{"version":3,"names":["authService","namespaced","state","user","JSON","parse","localStorage","getItem","error","mutations","SET_USER","SET_ERROR","actions","register","commit","userData","response","data","message","login","credentials","logout","console","getters","isAuthenticated","currentUser","authError"],"sources":["C:/Users/Admin/Downloads/chat-app-client-master/chat-app-client-master/src/store/auth.js"],"sourcesContent":["import { authService } from '../services/auth';\n\nexport default {\n  namespaced: true,\n  state: {\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    error: null\n  },\n  mutations: {\n    SET_USER(state, user) {\n      state.user = user;\n    },\n    SET_ERROR(state, error) {\n      state.error = error;\n    }\n  },\n  actions: {\n    async register({ commit }, userData) {\n      try {\n        const user = await authService.register(userData);\n        commit('SET_USER', user);\n        return user;\n      } catch (error) {\n        commit('SET_ERROR', error.response?.data?.message || 'Registration failed');\n        throw error;\n      }\n    },\n    async login({ commit }, credentials) {\n      try {\n        const user = await authService.login(credentials);\n        commit('SET_USER', user);\n        return user;\n      } catch (error) {\n        commit('SET_ERROR', error.response?.data?.message || 'Login failed');\n        throw error;\n      }\n    },\n    async logout({ commit }) {\n      try {\n        await authService.logout();\n        commit('SET_USER', null);\n      } catch (error) {\n        console.error('Logout error:', error);\n      }\n    }\n  },\n  getters: {\n    isAuthenticated: state => !!state.user,\n    currentUser: state => state.user,\n    authError: state => state.error\n  }\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,eAAe;EACbC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;IACLC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI;IACtDC,KAAK,EAAE;EACT,CAAC;EACDC,SAAS,EAAE;IACTC,QAAQA,CAACR,KAAK,EAAEC,IAAI,EAAE;MACpBD,KAAK,CAACC,IAAI,GAAGA,IAAI;IACnB,CAAC;IACDQ,SAASA,CAACT,KAAK,EAAEM,KAAK,EAAE;MACtBN,KAAK,CAACM,KAAK,GAAGA,KAAK;IACrB;EACF,CAAC;EACDI,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAC;MAAEC;IAAO,CAAC,EAAEC,QAAQ,EAAE;MACnC,IAAI;QACF,MAAMZ,IAAI,GAAG,MAAMH,WAAW,CAACa,QAAQ,CAACE,QAAQ,CAAC;QACjDD,MAAM,CAAC,UAAU,EAAEX,IAAI,CAAC;QACxB,OAAOA,IAAI;MACb,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdM,MAAM,CAAC,WAAW,EAAEN,KAAK,CAACQ,QAAQ,EAAEC,IAAI,EAAEC,OAAO,IAAI,qBAAqB,CAAC;QAC3E,MAAMV,KAAK;MACb;IACF,CAAC;IACD,MAAMW,KAAKA,CAAC;MAAEL;IAAO,CAAC,EAAEM,WAAW,EAAE;MACnC,IAAI;QACF,MAAMjB,IAAI,GAAG,MAAMH,WAAW,CAACmB,KAAK,CAACC,WAAW,CAAC;QACjDN,MAAM,CAAC,UAAU,EAAEX,IAAI,CAAC;QACxB,OAAOA,IAAI;MACb,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdM,MAAM,CAAC,WAAW,EAAEN,KAAK,CAACQ,QAAQ,EAAEC,IAAI,EAAEC,OAAO,IAAI,cAAc,CAAC;QACpE,MAAMV,KAAK;MACb;IACF,CAAC;IACD,MAAMa,MAAMA,CAAC;MAAEP;IAAO,CAAC,EAAE;MACvB,IAAI;QACF,MAAMd,WAAW,CAACqB,MAAM,CAAC,CAAC;QAC1BP,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAON,KAAK,EAAE;QACdc,OAAO,CAACd,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACvC;IACF;EACF,CAAC;EACDe,OAAO,EAAE;IACPC,eAAe,EAAEtB,KAAK,IAAI,CAAC,CAACA,KAAK,CAACC,IAAI;IACtCsB,WAAW,EAAEvB,KAAK,IAAIA,KAAK,CAACC,IAAI;IAChCuB,SAAS,EAAExB,KAAK,IAAIA,KAAK,CAACM;EAC5B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}