{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-fluid mt-4\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-3\"\n};\nconst _hoisted_4 = {\n  class: \"card\"\n};\nconst _hoisted_5 = {\n  class: \"card-body p-0\"\n};\nconst _hoisted_6 = {\n  class: \"col-md-9\"\n};\nconst _hoisted_7 = {\n  class: \"card\"\n};\nconst _hoisted_8 = {\n  class: \"card-header\"\n};\nconst _hoisted_9 = {\n  class: \"mb-0\"\n};\nconst _hoisted_10 = {\n  class: \"card-body\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_user_list = _resolveComponent(\"user-list\");\n  const _component_chat_window = _resolveComponent(\"chat-window\");\n  const _component_message_input = _resolveComponent(\"message-input\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    class: \"card-header\"\n  }, [_createElementVNode(\"h5\", {\n    class: \"mb-0\"\n  }, \"Online Users\")], -1)), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_user_list, {\n    users: $setup.onlineUsers,\n    selectedUser: $setup.selectedUser,\n    onSelectUser: $setup.selectUser\n  }, null, 8, [\"users\", \"selectedUser\", \"onSelectUser\"])])])]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"h5\", _hoisted_9, _toDisplayString($setup.selectedUser ? `Chat with ${$setup.selectedUser.username}` : 'Select a user to start chatting'), 1)]), _createElementVNode(\"div\", _hoisted_10, [$setup.selectedUser ? (_openBlock(), _createBlock(_component_chat_window, {\n    key: 0,\n    messages: $setup.messages,\n    currentUser: $setup.currentUser,\n    selectedUser: $setup.selectedUser\n  }, null, 8, [\"messages\", \"currentUser\", \"selectedUser\"])) : _createCommentVNode(\"\", true), $setup.selectedUser ? (_openBlock(), _createBlock(_component_message_input, {\n    key: 1,\n    onSendMessage: $setup.sendMessage,\n    isTyping: $setup.isTyping\n  }, null, 8, [\"onSendMessage\", \"isTyping\"])) : _createCommentVNode(\"\", true)])])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_user_list","users","$setup","onlineUsers","selectedUser","onSelectUser","selectUser","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_toDisplayString","username","_hoisted_10","_createBlock","_component_chat_window","key","messages","currentUser","_createCommentVNode","_component_message_input","onSendMessage","sendMessage","isTyping"],"sources":["C:\\Users\\Admin\\Downloads\\chat-app-client-master\\chat-app-client-master\\src\\views\\Chat.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid mt-4\">\n      <div class=\"row\">\n        <!-- Users List Sidebar -->\n        <div class=\"col-md-3\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h5 class=\"mb-0\">Online Users</h5>\n            </div>\n            <div class=\"card-body p-0\">\n              <user-list \n                :users=\"onlineUsers\"\n                :selectedUser=\"selectedUser\"\n                @select-user=\"selectUser\"\n              />\n            </div>\n          </div>\n        </div>\n  \n        <!-- Chat Window -->\n        <div class=\"col-md-9\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h5 class=\"mb-0\">\n                {{ selectedUser ? `Chat with ${selectedUser.username}` : 'Select a user to start chatting' }}\n              </h5>\n            </div>\n            <div class=\"card-body\">\n              <chat-window \n                v-if=\"selectedUser\"\n                :messages=\"messages\"\n                :currentUser=\"currentUser\"\n                :selectedUser=\"selectedUser\"\n              />\n              <message-input \n                v-if=\"selectedUser\"\n                @send-message=\"sendMessage\"\n                :isTyping=\"isTyping\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { ref, onMounted, computed } from 'vue'\n  import { useStore } from 'vuex'\n  import UserList from '../components/chat/UserList.vue'\n  import ChatWindow from '../components/chat/ChatWindow.vue'\n  import MessageInput from '../components/chat/MessageInput.vue'\n  import { initializeSocket } from '../services/socket'\n  \n  export default {\n    name: 'ChatView',\n    components: {\n      UserList,\n      ChatWindow,\n      MessageInput\n    },\n    setup() {\n      const store = useStore()\n      const socket = ref(null)\n      const onlineUsers = ref([])\n      const selectedUser = ref(null)\n      const messages = ref([])\n      const isTyping = ref(false)\n      \n      const currentUser = computed(() => store.getters['auth/currentUser'])\n  \n      onMounted(async () => {\n        socket.value = await initializeSocket(currentUser.value.token)\n        \n        socket.value.on('users', (users) => {\n          onlineUsers.value = users.filter(user => user._id !== currentUser.value._id)\n        })\n  \n        socket.value.on('message', (message) => {\n          messages.value.push(message)\n        })\n  \n        socket.value.on('message-history', (history) => {\n          messages.value = history\n        })\n  \n        socket.value.on('typing', (user) => {\n          if (selectedUser.value && user._id === selectedUser.value._id) {\n            isTyping.value = true\n            setTimeout(() => { isTyping.value = false }, 3000)\n          }\n        })\n      })\n  \n      const selectUser = (user) => {\n        selectedUser.value = user\n        messages.value = []\n        socket.value.emit('get-messages', {\n          from: currentUser.value._id,\n          to: user._id\n        })\n      }\n  \n      const sendMessage = (content) => {\n        if (!selectedUser.value) return\n  \n        const message = {\n          from: currentUser.value._id,\n          to: selectedUser.value._id,\n          content,\n          timestamp: new Date()\n        }\n  \n        socket.value.emit('send-message', message)\n        messages.value.push(message)\n      }\n  \n      return {\n        onlineUsers,\n        selectedUser,\n        messages,\n        currentUser,\n        isTyping,\n        selectUser,\n        sendMessage\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .chat-body {\n    padding: 0;\n    height: calc(100vh - 200px);\n    overflow: hidden;\n  }\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAsB;;EAC1BA,KAAK,EAAC;AAAK;;EAETA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAM;;EAIVA,KAAK,EAAC;AAAe;;EAWzBA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAa;;EAClBA,KAAK,EAAC;AAAM;;EAIbA,KAAK,EAAC;AAAW;;;;;uBA1B9BC,mBAAA,CA0CM,OA1CNC,UA0CM,GAzCJC,mBAAA,CAwCM,OAxCNC,UAwCM,GAtCJD,mBAAA,CAaM,OAbNE,UAaM,GAZJF,mBAAA,CAWM,OAXNG,UAWM,G,0BAVJH,mBAAA,CAEM;IAFDH,KAAK,EAAC;EAAa,IACtBG,mBAAA,CAAkC;IAA9BH,KAAK,EAAC;EAAM,GAAC,cAAY,E,QAE/BG,mBAAA,CAMM,OANNI,UAMM,GALJC,YAAA,CAIEC,oBAAA;IAHCC,KAAK,EAAEC,MAAA,CAAAC,WAAW;IAClBC,YAAY,EAAEF,MAAA,CAAAE,YAAY;IAC1BC,YAAW,EAAEH,MAAA,CAAAI;gEAOtBZ,mBAAA,CAqBM,OArBNa,UAqBM,GApBJb,mBAAA,CAmBM,OAnBNc,UAmBM,GAlBJd,mBAAA,CAIM,OAJNe,UAIM,GAHJf,mBAAA,CAEK,MAFLgB,UAEK,EAAAC,gBAAA,CADAT,MAAA,CAAAE,YAAY,gBAAgBF,MAAA,CAAAE,YAAY,CAACQ,QAAQ,4C,GAGxDlB,mBAAA,CAYM,OAZNmB,WAYM,GAVIX,MAAA,CAAAE,YAAY,I,cADpBU,YAAA,CAKEC,sBAAA;IAjChBC,GAAA;IA8BiBC,QAAQ,EAAEf,MAAA,CAAAe,QAAQ;IAClBC,WAAW,EAAEhB,MAAA,CAAAgB,WAAW;IACxBd,YAAY,EAAEF,MAAA,CAAAE;8DAhC/Be,mBAAA,YAmCsBjB,MAAA,CAAAE,YAAY,I,cADpBU,YAAA,CAIEM,wBAAA;IAtChBJ,GAAA;IAoCiBK,aAAY,EAAEnB,MAAA,CAAAoB,WAAW;IACzBC,QAAQ,EAAErB,MAAA,CAAAqB;gDArC3BJ,mBAAA,W","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}