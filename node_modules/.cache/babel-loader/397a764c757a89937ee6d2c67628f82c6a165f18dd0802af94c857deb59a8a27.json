{"ast":null,"code":"import { onMounted, onUpdated, ref } from 'vue';\nexport default {\n  name: 'ChatWindow',\n  props: {\n    messages: {\n      type: Array,\n      required: true\n    },\n    currentUser: {\n      type: Object,\n      required: true\n    },\n    selectedUser: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const messagesContainer = ref(null);\n    const scrollToBottom = () => {\n      if (messagesContainer.value) {\n        messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight;\n      }\n    };\n    onMounted(() => {\n      scrollToBottom();\n    });\n    onUpdated(() => {\n      scrollToBottom();\n    });\n    const isSentMessage = message => {\n      return message.from === props.currentUser._id;\n    };\n    const formatTime = timestamp => {\n      return new Date(timestamp).toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    };\n    return {\n      messagesContainer,\n      isSentMessage,\n      formatTime\n    };\n  }\n};","map":{"version":3,"names":["onMounted","onUpdated","ref","name","props","messages","type","Array","required","currentUser","Object","selectedUser","setup","messagesContainer","scrollToBottom","value","scrollTop","scrollHeight","isSentMessage","message","from","_id","formatTime","timestamp","Date","toLocaleTimeString","hour","minute"],"sources":["C:\\Users\\Admin\\Downloads\\chat-app-client-master\\chat-app-client-master\\src\\components\\chat\\ChatWindow.vue"],"sourcesContent":["<template>\n  <div class=\"chat-messages\" ref=\"messagesContainer\">\n    <div v-if=\"messages.length === 0\" class=\"text-center text-muted my-4\">\n      No messages yet. Start the conversation!\n    </div>\n    <div \n      v-for=\"(message, index) in messages\" \n      :key=\"index\"\n      class=\"message\"\n      :class=\"{ 'message-sent': isSentMessage(message), 'message-received': !isSentMessage(message) }\"\n    >\n      <div class=\"message-content\">\n        {{ message.content }}\n        <small class=\"message-time\">{{ formatTime(message.timestamp || message.createdAt) }}</small>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { onMounted, onUpdated, ref } from 'vue'\n\nexport default {\n  name: 'ChatWindow',\n  props: {\n    messages: {\n      type: Array,\n      required: true\n    },\n    currentUser: {\n      type: Object,\n      required: true\n    },\n    selectedUser: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const messagesContainer = ref(null)\n\n    const scrollToBottom = () => {\n      if (messagesContainer.value) {\n        messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight\n      }\n    }\n\n    onMounted(() => {\n      scrollToBottom()\n    })\n\n    onUpdated(() => {\n      scrollToBottom()\n    })\n\n    const isSentMessage = (message) => {\n      return message.from === props.currentUser._id\n    }\n\n    const formatTime = (timestamp) => {\n      return new Date(timestamp).toLocaleTimeString([], { \n        hour: '2-digit', \n        minute: '2-digit' \n      })\n    }\n\n    return {\n      messagesContainer,\n      isSentMessage,\n      formatTime\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chat-messages {\n  height: 400px;\n  overflow-y: auto;\n  padding: 1rem;\n}\n\n.message {\n  margin-bottom: 1rem;\n  max-width: 70%;\n}\n\n.message-sent {\n  margin-left: auto;\n}\n\n.message-received {\n  margin-right: auto;\n}\n\n.message-content {\n  padding: 0.5rem 1rem;\n  border-radius: 1rem;\n  position: relative;\n}\n\n.message-sent .message-content {\n  background-color: #007bff;\n  color: white;\n}\n\n.message-received .message-content {\n  background-color: #f1f1f1;\n}\n\n.message-time {\n  display: block;\n  font-size: 0.75rem;\n  margin-top: 0.25rem;\n  opacity: 0.7;\n}\n</style>"],"mappings":"AAoBA,SAASA,SAAS,EAAEC,SAAS,EAAEC,GAAE,QAAS,KAAI;AAE9C,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ,CAAC;IACDC,WAAW,EAAE;MACXH,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACZ,CAAC;IACDG,YAAY,EAAE;MACZL,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACZ;EACF,CAAC;EACDI,KAAKA,CAACR,KAAK,EAAE;IACX,MAAMS,iBAAgB,GAAIX,GAAG,CAAC,IAAI;IAElC,MAAMY,cAAa,GAAIA,CAAA,KAAM;MAC3B,IAAID,iBAAiB,CAACE,KAAK,EAAE;QAC3BF,iBAAiB,CAACE,KAAK,CAACC,SAAQ,GAAIH,iBAAiB,CAACE,KAAK,CAACE,YAAW;MACzE;IACF;IAEAjB,SAAS,CAAC,MAAM;MACdc,cAAc,CAAC;IACjB,CAAC;IAEDb,SAAS,CAAC,MAAM;MACda,cAAc,CAAC;IACjB,CAAC;IAED,MAAMI,aAAY,GAAKC,OAAO,IAAK;MACjC,OAAOA,OAAO,CAACC,IAAG,KAAMhB,KAAK,CAACK,WAAW,CAACY,GAAE;IAC9C;IAEA,MAAMC,UAAS,GAAKC,SAAS,IAAK;MAChC,OAAO,IAAIC,IAAI,CAACD,SAAS,CAAC,CAACE,kBAAkB,CAAC,EAAE,EAAE;QAChDC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC;IACH;IAEA,OAAO;MACLd,iBAAiB;MACjBK,aAAa;MACbI;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}